class Detpojo{

    String ep;

    String department;

    int salary;

    public Detpojo(String ep, String department, int salary) {

        super();

        this.ep = ep;

        this.department = department;

        this.salary = salary;

    }

    public String getEp() {

        return ep;

    }

    public String getDepartment() {

        return department;

    }

    public int getSalary() {

        return salary;

    }

    public void setEp(String ep) {

        this.ep = ep;

    }

    public void setDepartment(String department) {

        this.department = department;

    }

    public void setSalary(int salary) {

        this.salary = salary;

    }

}
class PerEmplo extends Employe{

    void emp() {

        System.out.println("enter number of employees :");

        int n=sc.nextInt();

        for(int i=0;i<n;i++) {

            System.out.println("enter emp id : ");

            int id=sc.nextInt();

            System.out.println("enter emp name : ");

            String ep=sc.next();

            System.out.println("enter emp department : ");

            String dep=sc.next();

            System.out.println("enter emp salary : ");

            int sal=sc.nextInt();

            mapp1.put(id,new Detpojo(ep,dep,sal));

        }

    }

}
class PartEmplo extends PerEmplo{

    void emp() {

        System.out.println("enter number of employees :");

        int n=sc.nextInt();

        for(int i=0;i<n;i++) {

            System.out.println("enter emp id : ");

            int id=sc.nextInt();

            System.out.println("enter emp name : ");

            String ep=sc.next();

            System.out.println("enter emp department : ");

            String dep=sc.next();

            System.out.println("enter emp salary : ");

            int sal=sc.nextInt();

            mapp2.put(id,new Detpojo(ep,dep,sal));

        }

    }

}
class ContEmplo extends PartEmplo{

    void emp() {

        System.out.println("enter number of employees :");

        int n=sc.nextInt();

        for(int i=0;i<n;i++) {

            System.out.println("enter emp id : ");

            int id=sc.nextInt();

            System.out.println("enter emp name : ");

            String ep=sc.next();

            System.out.println("enter emp department : ");

            String dep=sc.next();

            System.out.println("enter emp salary : ");

            int sal=sc.nextInt();

            mapp3.put(id,new Detpojo(ep,dep,sal));

        }

    }

}
import java.util.*;
class Employe {

    static Hashtable<Integer,Detpojo> mapp1=new Hashtable<>();

    static Hashtable<Integer,Detpojo> mapp2=new Hashtable<>();

    static Hashtable<Integer,Detpojo> mapp3=new Hashtable<>();

    static Scanner sc=new Scanner(System.in);

    static PerEmplo ob1=new PerEmplo();

    static PartEmplo ob2=new PartEmplo();

    static ContEmplo ob3=new ContEmplo();

    static AllEmps ob6=new AllEmps();

    static int z;

    static int q;

    public static void main(String []a) {

        do {

            ob6.adding();

        }while(z==1);

        ob6.deleting();

        ob6.modify();

        ob6.searching();

        ob6.allEmpss();

    }

}
class EnterDetpojo extends ContEmplo{

    void adding() {

        System.out.println("select type of employee"+"\n"+"1.permanent"+"\n"+"2.parttime"+"\n"+"3.contract" );

        int x=sc.nextInt();

        if(x==1) {

            ob1.emp();

        }

        else if(x==2) {

            ob2.emp();

        }

        else if(x==3) {

            ob3.emp();

        }

        else {

            System.out.println("invalid input");

        }

        System.out.println("do you want to enter again "+"\n"+"1.enter other data");

        z=sc.nextInt();

    }

}

class Delete extends EnterDetpojo{

    void deleting() {

        System.out.println("do you want to delete an employee"+"\n"+"1.Yes"+"\n"+"2.No");

        int w=sc.nextInt();

        if(w==1){

            System.out.println("select employee type :"+"\n"+"1.permanent"+"\n"+"2.parttime"+"\n"+"3.contract");

            int ab=sc.nextInt();

            if(ab==1) {

                System.out.println("enter the employee id to delete: ");

                int q=sc.nextInt();

                if(mapp1.containsKey(q)) {

                    mapp1.remove(q);

                }

            }

            else if(ab==2) {

                System.out.println("enter the employee id to delete: ");

                int q=sc.nextInt();

                if(mapp2.containsKey(q)) {

                    mapp2.remove(q);

                }

            }

            else if(ab==3) {

                System.out.println("enter the employee id to delete: ");

                int q=sc.nextInt();

                if(mapp3.containsKey(q)) {

                    mapp3.remove(q);

                }

            }

            else {

                System.out.println("invalid input");

            }

        }

    }

}

class Modify extends Delete{

    void modify() {

        System.out.println("do you want to modify an employee"+"\n"+"1.Yes"+"\n"+"2.No");

        int w=sc.nextInt();

        if(w==1){

            System.out.println("select employee type :"+"\n"+"1.permanent"+"\n"+"2.parttime"+"\n"+"3.contract");

            int ab=sc.nextInt();

            if(ab==1) {

                System.out.println("enter the employee id to modify: ");

                q=sc.nextInt();

                if(mapp1.containsKey(q)) {

                    modfs();

                }

            }

            else if(ab==2) {

                System.out.println("enter the employee id to modify: ");

                int q=sc.nextInt();

                if(mapp2.containsKey(q)) {

                    modfs1();

                }

            }

            else if(ab==3) {

                System.out.println("enter the employee id to modify: ");

                int q=sc.nextInt();

                if(mapp3.containsKey(q)) {

                    modfs2();

                }

            }

            else {

                System.out.println("invalid input");

            }

        }

    }

    static void modfs() {

        System.out.println("enter what to modify"+"\n"+"1.name"+"\n"+"2.department"+"\n"+"3.salary");

        int x=sc.nextInt();

        if(x==1) {

            System.out.println("enter the changed name :");

            String g=sc.next();

            for(int i:mapp1.keySet()) {

                mapp1.get(q).setEp(g);

            }

        }

        else if(x==2) {

            System.out.println("enter the changed department :");

            String g=sc.next();

            for(int i:mapp1.keySet()) {

                mapp1.get(q).setDepartment(g);

            }

        }

        else if(x==3) {

            System.out.println("enter the changed salary :");

            int y=sc.nextInt();

            for(int i:mapp1.keySet()) {

                mapp1.get(q).setSalary(y);

            }

        }

        else {

            System.out.println("invalid input !");

        }

    }

    static void modfs1() {

        System.out.println("enter what to modify"+"\n"+"1.name"+"\n"+"2.department"+"\n"+"3.salary");

        int x=sc.nextInt();

        if(x==1) {

            System.out.println("enter the changed name :");

            String g=sc.next();

            for(int i:mapp2.keySet()) {

                mapp2.get(q).setEp(g);

            }

        }

        else if(x==2) {

            System.out.println("enter the changed department :");

            String g=sc.next();

            for(int i:mapp2.keySet()) {

                mapp2.get(q).setDepartment(g);

            }

        }

        else if(x==3) {

            System.out.println("enter the changed salary :");

            int y=sc.nextInt();

            for(int i:mapp2.keySet()) {

                mapp2.get(q).setSalary(y);

            }

        }

        else {

            System.out.println("invalid input !");

        }

    }

    static void modfs2() {

        System.out.println("enter what to modify"+"\n"+"1.name"+"\n"+"2.department"+"\n"+"3.salary");

        int x=sc.nextInt();

        if(x==1) {

            System.out.println("enter the changed name :");

            String g=sc.next();

            for(int i:mapp3.keySet()) {

                mapp3.get(q).setEp(g);

            }

        }

        else if(x==2) {

            System.out.println("enter the changed department :");

            String g=sc.next();

            for(int i:mapp3.keySet()) {

                mapp3.get(q).setDepartment(g);

            }

        }

        else if(x==3) {

            System.out.println("enter the changed salary :");

            int y=sc.nextInt();

            for(int i:mapp3.keySet()) {

                mapp3.get(q).setSalary(y);

            }

        }

        else {

            System.out.println("invalid input !");

        }

    }

}

class Search extends Modify{

    void searching() {

        System.out.println("do you want to search for employee "+"\n"+"1.Yes"+"\n"+"2.No");

        int e=sc.nextInt();

        if(e==1) {

            System.out.println("enter id of employee : ");

            int r=sc.nextInt();

            if(mapp1.containsKey(r)) {

                System.out.println("Employee is permanent Employee");

            }

            else if(mapp2.containsKey(r)) {

                System.out.println("Employee is parttime Employee");

            }

            else if(mapp3.containsKey(r)) {

                System.out.println("Employee is contract Employee");

            }

            else {

                System.out.println("Employee not found !");

            }

        }

    }

}

class AllEmps extends Search {

    void allEmpss() {

        for (int i : mapp1.keySet()) {

            System.out.println(" permanent Employees are: " + mapp1.get(i).getEp() + " " + mapp1.get(i).getDepartment() + " " + mapp1.get(i).getSalary());

        }

        for (int i : mapp2.keySet()) {

            System.out.println(" parttime Employees are: " + mapp2.get(i).getEp() + " " + mapp2.get(i).getDepartment() + " " + mapp2.get(i).getSalary());

        }

        for (int i : mapp3.keySet()) {

            System.out.println(" contract Employees are: " + mapp3.get(i).getEp() + " " + mapp3.get(i).getDepartment() + " " + mapp3.get(i).getSalary());

        }

    }
}
